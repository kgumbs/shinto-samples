"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeBuildHelper = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const pipelines = require("aws-cdk-lib/pipelines");
const constants_1 = require("./constants");
const types_1 = require("./types");
/**
 *
 * @class
 * @description - CodeBuildStep Helper
 *
 */
class CodeBuildHelper {
    constructor(props) {
        this._props = {
            ...props,
        };
    }
    /**
     *
     * @description - java build pipeline
     * @param props CodeBuildStep properties
     * @returns CodeBuildStep
     *
     */
    addJavaBuildStep(props) {
        let id = types_1.BuildType.JAVA;
        let codeBuildStepProps = {
            ...props,
            commands: [
                ...this._props.buildSpec.commands || constants_1.ShintoConstants.JAVA_BUILD_COMMANDS,
            ],
            installCommands: [
                `cd ${this._props.metadata?.PIPELINE_WORKSPACE || constants_1.ShintoConstants.DEFAULT_DIR}`,
                ...this._props.buildSpec.installCommands || constants_1.ShintoConstants.JAVA_BUILD_INSTALL_COMMANDS,
            ],
            env: {
                ...props.env,
                ...this._props.buildSpec.env,
                PACKAGE_MANAGER: `${this._props.buildSpec.packageManager || types_1.PackageManagerType.MAVEN}`,
            },
        };
        let codeBuildStep = new pipelines.CodeBuildStep(id, codeBuildStepProps);
        return codeBuildStep;
    }
    /**
     *
     * @description - python build pipeline
     * @param props CodeBuildStep properties
     * @returns CodeBuildStep
     *
     */
    addPythonBuildStep(props) {
        let id = types_1.BuildType.PYTHON;
        let codeBuildStepProps = {
            ...props,
            commands: [
                ...this._props.buildSpec.commands || constants_1.ShintoConstants.PYTHON_BUILD_COMMANDS,
            ],
            installCommands: [
                `cd ${this._props.metadata?.PIPELINE_WORKSPACE || constants_1.ShintoConstants.DEFAULT_DIR}`,
                ...this._props.buildSpec.installCommands || constants_1.ShintoConstants.PYTHON_BUILD_INSTALL_COMMANDS,
            ],
            env: {
                ...props.env,
                ...this._props.buildSpec.env,
                PYTEST_DIR: `${this._props.metadata?.PYTEST_DIR || constants_1.ShintoConstants.PYTHON_PYTEST_DIR}`,
                PACKAGE_MANAGER: `${this._props.buildSpec.packageManager || types_1.PackageManagerType.PIP}`,
            },
        };
        let codeBuildStep = new pipelines.CodeBuildStep(id, codeBuildStepProps);
        return codeBuildStep;
    }
}
exports.CodeBuildHelper = CodeBuildHelper;
_a = JSII_RTTI_SYMBOL_1;
CodeBuildHelper[_a] = { fqn: "@mrwconsulting/shinto.CodeBuildHelper", version: "0.0.2" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZWJ1aWxkLWhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGludG8vY29kZWJ1aWxkLWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLG1EQUFtRDtBQUNuRCwyQ0FBOEM7QUFFOUMsbUNBQXdEO0FBRXhEOzs7OztHQUtHO0FBQ0gsTUFBYSxlQUFlO0lBRzFCLFlBQVksS0FBa0I7UUFDNUIsSUFBSSxDQUFDLE1BQU0sR0FBRztZQUNaLEdBQUcsS0FBSztTQUNULENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsZ0JBQWdCLENBQUMsS0FBbUM7UUFDbEQsSUFBSSxFQUFFLEdBQUcsaUJBQVMsQ0FBQyxJQUFJLENBQUM7UUFDeEIsSUFBSSxrQkFBa0IsR0FBRztZQUN2QixHQUFHLEtBQUs7WUFDUixRQUFRLEVBQUU7Z0JBQ1IsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLElBQUksMkJBQWUsQ0FBQyxtQkFBbUI7YUFDekU7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxrQkFBa0IsSUFBSSwyQkFBZSxDQUFDLFdBQVcsRUFBRTtnQkFDL0UsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxlQUFlLElBQUksMkJBQWUsQ0FBQywyQkFBMkI7YUFDeEY7WUFDRCxHQUFHLEVBQUU7Z0JBQ0gsR0FBRyxLQUFLLENBQUMsR0FBRztnQkFDWixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUc7Z0JBQzVCLGVBQWUsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsSUFBSSwwQkFBa0IsQ0FBQyxLQUFLLEVBQUU7YUFDdkY7U0FDRixDQUFDO1FBQ0YsSUFBSSxhQUFhLEdBQUcsSUFBSSxTQUFTLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3hFLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxrQkFBa0IsQ0FBQyxLQUFtQztRQUNwRCxJQUFJLEVBQUUsR0FBRyxpQkFBUyxDQUFDLE1BQU0sQ0FBQztRQUMxQixJQUFJLGtCQUFrQixHQUFHO1lBQ3ZCLEdBQUcsS0FBSztZQUNSLFFBQVEsRUFBRTtnQkFDUixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsSUFBSSwyQkFBZSxDQUFDLHFCQUFxQjthQUMzRTtZQUNELGVBQWUsRUFBRTtnQkFDZixNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLGtCQUFrQixJQUFJLDJCQUFlLENBQUMsV0FBVyxFQUFFO2dCQUMvRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLGVBQWUsSUFBSSwyQkFBZSxDQUFDLDZCQUE2QjthQUMxRjtZQUNELEdBQUcsRUFBRTtnQkFDSCxHQUFHLEtBQUssQ0FBQyxHQUFHO2dCQUNaLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRztnQkFDNUIsVUFBVSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsVUFBVSxJQUFJLDJCQUFlLENBQUMsaUJBQWlCLEVBQUU7Z0JBQ3RGLGVBQWUsRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsSUFBSSwwQkFBa0IsQ0FBQyxHQUFHLEVBQUU7YUFDckY7U0FDRixDQUFDO1FBQ0YsSUFBSSxhQUFhLEdBQUcsSUFBSSxTQUFTLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3hFLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7O0FBaEVILDBDQWlFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHBpcGVsaW5lcyBmcm9tICdhd3MtY2RrLWxpYi9waXBlbGluZXMnO1xuaW1wb3J0IHsgU2hpbnRvQ29uc3RhbnRzIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgU2hpbnRvUHJvcHMgfSBmcm9tICcuL2luZGV4JztcbmltcG9ydCB7IEJ1aWxkVHlwZSwgUGFja2FnZU1hbmFnZXJUeXBlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICpcbiAqIEBjbGFzc1xuICogQGRlc2NyaXB0aW9uIC0gQ29kZUJ1aWxkU3RlcCBIZWxwZXJcbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBDb2RlQnVpbGRIZWxwZXIge1xuICBwcml2YXRlIF9wcm9wczogU2hpbnRvUHJvcHM7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IFNoaW50b1Byb3BzKSB7XG4gICAgdGhpcy5fcHJvcHMgPSB7XG4gICAgICAuLi5wcm9wcyxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvbiAtIGphdmEgYnVpbGQgcGlwZWxpbmVcbiAgICogQHBhcmFtIHByb3BzIENvZGVCdWlsZFN0ZXAgcHJvcGVydGllc1xuICAgKiBAcmV0dXJucyBDb2RlQnVpbGRTdGVwXG4gICAqXG4gICAqL1xuICBhZGRKYXZhQnVpbGRTdGVwKHByb3BzOiBwaXBlbGluZXMuQ29kZUJ1aWxkU3RlcFByb3BzKTogcGlwZWxpbmVzLkNvZGVCdWlsZFN0ZXAge1xuICAgIGxldCBpZCA9IEJ1aWxkVHlwZS5KQVZBO1xuICAgIGxldCBjb2RlQnVpbGRTdGVwUHJvcHMgPSB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGNvbW1hbmRzOiBbXG4gICAgICAgIC4uLnRoaXMuX3Byb3BzLmJ1aWxkU3BlYy5jb21tYW5kcyB8fCBTaGludG9Db25zdGFudHMuSkFWQV9CVUlMRF9DT01NQU5EUyxcbiAgICAgIF0sXG4gICAgICBpbnN0YWxsQ29tbWFuZHM6IFtcbiAgICAgICAgYGNkICR7dGhpcy5fcHJvcHMubWV0YWRhdGE/LlBJUEVMSU5FX1dPUktTUEFDRSB8fCBTaGludG9Db25zdGFudHMuREVGQVVMVF9ESVJ9YCxcbiAgICAgICAgLi4udGhpcy5fcHJvcHMuYnVpbGRTcGVjLmluc3RhbGxDb21tYW5kcyB8fCBTaGludG9Db25zdGFudHMuSkFWQV9CVUlMRF9JTlNUQUxMX0NPTU1BTkRTLFxuICAgICAgXSxcbiAgICAgIGVudjoge1xuICAgICAgICAuLi5wcm9wcy5lbnYsXG4gICAgICAgIC4uLnRoaXMuX3Byb3BzLmJ1aWxkU3BlYy5lbnYsXG4gICAgICAgIFBBQ0tBR0VfTUFOQUdFUjogYCR7dGhpcy5fcHJvcHMuYnVpbGRTcGVjLnBhY2thZ2VNYW5hZ2VyIHx8IFBhY2thZ2VNYW5hZ2VyVHlwZS5NQVZFTn1gLFxuICAgICAgfSxcbiAgICB9O1xuICAgIGxldCBjb2RlQnVpbGRTdGVwID0gbmV3IHBpcGVsaW5lcy5Db2RlQnVpbGRTdGVwKGlkLCBjb2RlQnVpbGRTdGVwUHJvcHMpO1xuICAgIHJldHVybiBjb2RlQnVpbGRTdGVwO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvbiAtIHB5dGhvbiBidWlsZCBwaXBlbGluZVxuICAgKiBAcGFyYW0gcHJvcHMgQ29kZUJ1aWxkU3RlcCBwcm9wZXJ0aWVzXG4gICAqIEByZXR1cm5zIENvZGVCdWlsZFN0ZXBcbiAgICpcbiAgICovXG4gIGFkZFB5dGhvbkJ1aWxkU3RlcChwcm9wczogcGlwZWxpbmVzLkNvZGVCdWlsZFN0ZXBQcm9wcyk6IHBpcGVsaW5lcy5Db2RlQnVpbGRTdGVwIHtcbiAgICBsZXQgaWQgPSBCdWlsZFR5cGUuUFlUSE9OO1xuICAgIGxldCBjb2RlQnVpbGRTdGVwUHJvcHMgPSB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGNvbW1hbmRzOiBbXG4gICAgICAgIC4uLnRoaXMuX3Byb3BzLmJ1aWxkU3BlYy5jb21tYW5kcyB8fCBTaGludG9Db25zdGFudHMuUFlUSE9OX0JVSUxEX0NPTU1BTkRTLFxuICAgICAgXSxcbiAgICAgIGluc3RhbGxDb21tYW5kczogW1xuICAgICAgICBgY2QgJHt0aGlzLl9wcm9wcy5tZXRhZGF0YT8uUElQRUxJTkVfV09SS1NQQUNFIHx8IFNoaW50b0NvbnN0YW50cy5ERUZBVUxUX0RJUn1gLFxuICAgICAgICAuLi50aGlzLl9wcm9wcy5idWlsZFNwZWMuaW5zdGFsbENvbW1hbmRzIHx8IFNoaW50b0NvbnN0YW50cy5QWVRIT05fQlVJTERfSU5TVEFMTF9DT01NQU5EUyxcbiAgICAgIF0sXG4gICAgICBlbnY6IHtcbiAgICAgICAgLi4ucHJvcHMuZW52LFxuICAgICAgICAuLi50aGlzLl9wcm9wcy5idWlsZFNwZWMuZW52LFxuICAgICAgICBQWVRFU1RfRElSOiBgJHt0aGlzLl9wcm9wcy5tZXRhZGF0YT8uUFlURVNUX0RJUiB8fCBTaGludG9Db25zdGFudHMuUFlUSE9OX1BZVEVTVF9ESVJ9YCxcbiAgICAgICAgUEFDS0FHRV9NQU5BR0VSOiBgJHt0aGlzLl9wcm9wcy5idWlsZFNwZWMucGFja2FnZU1hbmFnZXIgfHwgUGFja2FnZU1hbmFnZXJUeXBlLlBJUH1gLFxuICAgICAgfSxcbiAgICB9O1xuICAgIGxldCBjb2RlQnVpbGRTdGVwID0gbmV3IHBpcGVsaW5lcy5Db2RlQnVpbGRTdGVwKGlkLCBjb2RlQnVpbGRTdGVwUHJvcHMpO1xuICAgIHJldHVybiBjb2RlQnVpbGRTdGVwO1xuICB9XG59Il19