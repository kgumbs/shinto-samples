"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PipelineUtils = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 *
 * @static - pipeline common utils
 * @optional
 */
class PipelineUtils {
    /**
     * @static - propertyOrDefault Returns defaultValue in the event propertyValue is empty, null, undefined or otherwise it returns propertyValue
     * @param propertyValue Property value to verify.
     * @param defaultValue Default value to set if not set.
     *
     */
    static propertyOrDefault(propertyValue, defaultValue) {
        const useDefaultValue = propertyValue == undefined || (typeof propertyValue === 'string' && propertyValue.trim().length == 0);
        if (useDefaultValue) {
            if (typeof defaultValue === 'function') {
                return defaultValue.call(defaultValue);
            }
            else {
                return defaultValue;
            }
        }
        return propertyValue;
    }
    /**
     *
     * @static - isArrayOrDefault Returns defaultArray in the array is empty, null, undefined or otherwise it returns propertyArray
     *
     * @param array Array to verify.
     * @param defaultArray Default array to set if not found.
     *
     */
    static isArrayOrDefault(array, defaultArray) {
        if (!Array.isArray(array) || array.length == 0) {
            array = defaultArray;
        }
        return array;
    }
}
exports.PipelineUtils = PipelineUtils;
_a = JSII_RTTI_SYMBOL_1;
PipelineUtils[_a] = { fqn: "@mrwconsulting/shinto.PipelineUtils", version: "0.0.2" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2hpbnRvL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7R0FJRztBQUNILE1BQWEsYUFBYTtJQUN4Qjs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxpQkFBaUIsQ0FBSSxhQUFnQixFQUFFLFlBQTBDO1FBQ3RGLE1BQU0sZUFBZSxHQUNuQixhQUFhLElBQUksU0FBUyxJQUFJLENBQUMsT0FBTyxhQUFhLEtBQUssUUFBUSxJQUFJLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDeEcsSUFBSSxlQUFlLEVBQUU7WUFDbkIsSUFBSSxPQUFPLFlBQVksS0FBSyxVQUFVLEVBQUU7Z0JBQ3RDLE9BQVEsWUFBd0MsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7YUFDckU7aUJBQU07Z0JBQ0wsT0FBTyxZQUFpQixDQUFDO2FBQzFCO1NBQ0Y7UUFDRCxPQUFPLGFBQWtCLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxNQUFNLENBQUMsZ0JBQWdCLENBQUksS0FBZSxFQUFFLFlBQXNCO1FBQ2hFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQzlDLEtBQUssR0FBRyxZQUFZLENBQUM7U0FDdEI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O0FBakNILHNDQWtDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIEBzdGF0aWMgLSBwaXBlbGluZSBjb21tb24gdXRpbHNcbiAqIEBvcHRpb25hbFxuICovXG5leHBvcnQgY2xhc3MgUGlwZWxpbmVVdGlscyB7XG4gIC8qKlxuICAgKiBAc3RhdGljIC0gcHJvcGVydHlPckRlZmF1bHQgUmV0dXJucyBkZWZhdWx0VmFsdWUgaW4gdGhlIGV2ZW50IHByb3BlcnR5VmFsdWUgaXMgZW1wdHksIG51bGwsIHVuZGVmaW5lZCBvciBvdGhlcndpc2UgaXQgcmV0dXJucyBwcm9wZXJ0eVZhbHVlXG4gICAqIEBwYXJhbSBwcm9wZXJ0eVZhbHVlIFByb3BlcnR5IHZhbHVlIHRvIHZlcmlmeS5cbiAgICogQHBhcmFtIGRlZmF1bHRWYWx1ZSBEZWZhdWx0IHZhbHVlIHRvIHNldCBpZiBub3Qgc2V0LlxuICAgKlxuICAgKi9cbiAgc3RhdGljIHByb3BlcnR5T3JEZWZhdWx0PFQ+KHByb3BlcnR5VmFsdWU6IFQsIGRlZmF1bHRWYWx1ZT86IFQgfCBEZWZhdWx0VmFsdWVGdW5jdGlvbjxUPik6IFQge1xuICAgIGNvbnN0IHVzZURlZmF1bHRWYWx1ZTogYm9vbGVhbiA9XG4gICAgICBwcm9wZXJ0eVZhbHVlID09IHVuZGVmaW5lZCB8fCAodHlwZW9mIHByb3BlcnR5VmFsdWUgPT09ICdzdHJpbmcnICYmIHByb3BlcnR5VmFsdWUudHJpbSgpLmxlbmd0aCA9PSAwKTtcbiAgICBpZiAodXNlRGVmYXVsdFZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mIGRlZmF1bHRWYWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gKGRlZmF1bHRWYWx1ZSBhcyBEZWZhdWx0VmFsdWVGdW5jdGlvbjxUPikuY2FsbChkZWZhdWx0VmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZSBhcyBUO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcGVydHlWYWx1ZSBhcyBUO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBzdGF0aWMgLSBpc0FycmF5T3JEZWZhdWx0IFJldHVybnMgZGVmYXVsdEFycmF5IGluIHRoZSBhcnJheSBpcyBlbXB0eSwgbnVsbCwgdW5kZWZpbmVkIG9yIG90aGVyd2lzZSBpdCByZXR1cm5zIHByb3BlcnR5QXJyYXlcbiAgICpcbiAgICogQHBhcmFtIGFycmF5IEFycmF5IHRvIHZlcmlmeS5cbiAgICogQHBhcmFtIGRlZmF1bHRBcnJheSBEZWZhdWx0IGFycmF5IHRvIHNldCBpZiBub3QgZm91bmQuXG4gICAqXG4gICAqL1xuICBzdGF0aWMgaXNBcnJheU9yRGVmYXVsdDxUPihhcnJheTogQXJyYXk8VD4sIGRlZmF1bHRBcnJheTogQXJyYXk8VD4pOiBBcnJheTxUPiB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycmF5KSB8fCBhcnJheS5sZW5ndGggPT0gMCkge1xuICAgICAgYXJyYXkgPSBkZWZhdWx0QXJyYXk7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBFbnVtT2JqZWN0ID0geyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcbmV4cG9ydCBpbnRlcmZhY2UgRGVmYXVsdFZhbHVlRnVuY3Rpb248VD4geyAoKTogVCB9Il19