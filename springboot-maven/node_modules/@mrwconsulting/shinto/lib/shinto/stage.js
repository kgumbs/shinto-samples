"use strict";
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GhostStack = exports.CodeScanStage = exports.BuildStage = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const aws_cdk_lib_1 = require("aws-cdk-lib");
/**
 *
 * @class
 * @description - Build Stage class
 *
*/
class BuildStage extends aws_cdk_lib_1.Stage {
    constructor(scope, id, props) {
        super(scope, id, props);
        new GhostStack(this, 'BuildStack'.toLowerCase(), {
            ...props,
            stackName: `${props.label.customer}-${props.label.project}-build-stack`.toLowerCase(),
        });
    }
}
exports.BuildStage = BuildStage;
_a = JSII_RTTI_SYMBOL_1;
BuildStage[_a] = { fqn: "@mrwconsulting/shinto.BuildStage", version: "0.0.2" };
/**
 *
 * @class
 * @description - Scan Stage class
 *
*/
class CodeScanStage extends aws_cdk_lib_1.Stage {
    constructor(scope, id, props) {
        super(scope, id, props);
        new GhostStack(this, 'CodeScanStack'.toLowerCase(), {
            ...props,
            stackName: `${props.label.customer}-${props.label.project}-codescan-stack`.toLowerCase(),
        });
    }
}
exports.CodeScanStage = CodeScanStage;
_b = JSII_RTTI_SYMBOL_1;
CodeScanStage[_b] = { fqn: "@mrwconsulting/shinto.CodeScanStage", version: "0.0.2" };
/**
 *
 * @class
 * @description - Ghost Stack class
 *
*/
class GhostStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
    }
}
exports.GhostStack = GhostStack;
_c = JSII_RTTI_SYMBOL_1;
GhostStack[_c] = { fqn: "@mrwconsulting/shinto.GhostStack", version: "0.0.2" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2hpbnRvL3N0YWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNkNBQXVEO0FBSXZEOzs7OztFQUtFO0FBQ0YsTUFBYSxVQUFXLFNBQVEsbUJBQUs7SUFDbkMsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUFrQjtRQUMxRCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4QixJQUFJLFVBQVUsQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQy9DLEdBQUcsS0FBSztZQUNSLFNBQVMsRUFBRSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxjQUFjLENBQUMsV0FBVyxFQUFFO1NBQ3RGLENBQUMsQ0FBQztJQUNMLENBQUM7O0FBUEgsZ0NBUUM7OztBQUVEOzs7OztFQUtFO0FBQ0YsTUFBYSxhQUFjLFNBQVEsbUJBQUs7SUFDdEMsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUFrQjtRQUMxRCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4QixJQUFJLFVBQVUsQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQ2xELEdBQUcsS0FBSztZQUNSLFNBQVMsRUFBRSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUU7U0FDekYsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7QUFQSCxzQ0FRQzs7O0FBRUQ7Ozs7O0VBS0U7QUFDRixNQUFhLFVBQVcsU0FBUSxtQkFBSztJQUNuQyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQWlCO1FBQ3pELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUM7O0FBSEgsZ0NBSUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFjaywgU3RhY2tQcm9wcywgU3RhZ2UgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IFNoaW50b1Byb3BzIH0gZnJvbSAnLic7XG5cbi8qKlxuICpcbiAqIEBjbGFzc1xuICogQGRlc2NyaXB0aW9uIC0gQnVpbGQgU3RhZ2UgY2xhc3NcbiAqXG4qL1xuZXhwb3J0IGNsYXNzIEJ1aWxkU3RhZ2UgZXh0ZW5kcyBTdGFnZSB7XG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTaGludG9Qcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuICAgIG5ldyBHaG9zdFN0YWNrKHRoaXMsICdCdWlsZFN0YWNrJy50b0xvd2VyQ2FzZSgpLCB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIHN0YWNrTmFtZTogYCR7cHJvcHMubGFiZWwuY3VzdG9tZXJ9LSR7cHJvcHMubGFiZWwucHJvamVjdH0tYnVpbGQtc3RhY2tgLnRvTG93ZXJDYXNlKCksXG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKlxuICogQGNsYXNzXG4gKiBAZGVzY3JpcHRpb24gLSBTY2FuIFN0YWdlIGNsYXNzXG4gKlxuKi9cbmV4cG9ydCBjbGFzcyBDb2RlU2NhblN0YWdlIGV4dGVuZHMgU3RhZ2Uge1xuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogU2hpbnRvUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQsIHByb3BzKTtcbiAgICBuZXcgR2hvc3RTdGFjayh0aGlzLCAnQ29kZVNjYW5TdGFjaycudG9Mb3dlckNhc2UoKSwge1xuICAgICAgLi4ucHJvcHMsXG4gICAgICBzdGFja05hbWU6IGAke3Byb3BzLmxhYmVsLmN1c3RvbWVyfS0ke3Byb3BzLmxhYmVsLnByb2plY3R9LWNvZGVzY2FuLXN0YWNrYC50b0xvd2VyQ2FzZSgpLFxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICpcbiAqIEBjbGFzc1xuICogQGRlc2NyaXB0aW9uIC0gR2hvc3QgU3RhY2sgY2xhc3NcbiAqXG4qL1xuZXhwb3J0IGNsYXNzIEdob3N0U3RhY2sgZXh0ZW5kcyBTdGFjayB7XG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTdGFja1Byb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG4gIH1cbn0iXX0=