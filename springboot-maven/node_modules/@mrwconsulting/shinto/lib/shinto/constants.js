"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShintoConstants = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const aws_codebuild_1 = require("aws-cdk-lib/aws-codebuild");
const aws_ec2_1 = require("aws-cdk-lib/aws-ec2");
const types_1 = require("./types");
/**
 *
 * @static
 * @description - continuous integration constants
 *
 */
class ShintoConstants {
}
exports.ShintoConstants = ShintoConstants;
_a = JSII_RTTI_SYMBOL_1;
ShintoConstants[_a] = { fqn: "@mrwconsulting/shinto.ShintoConstants", version: "0.0.2" };
ShintoConstants.TRUE = true;
ShintoConstants.FALSE = false;
ShintoConstants.REPOSITORY_BRANCH = 'main';
ShintoConstants.SECRET_NAME = 'mrwconsulting/codepipeline';
ShintoConstants.DEFAULT_DIR = './';
ShintoConstants.DEFAULT_BUILD_TYPE = types_1.BuildType.JAVA;
ShintoConstants.DEFAULT_PLUGGABLE_WORKSPACE = '.pipeline';
ShintoConstants.DEFAULT_REGION = types_1.RegionType.US_EAST_1;
ShintoConstants.DEFAULT_REPOSITORY_BRANCH = ShintoConstants.REPOSITORY_BRANCH;
ShintoConstants.SSM_KEY_VPCID = '/mrwconsulting/codepipeline/vpc/id';
ShintoConstants.SSM_KEY_NPM_SCOPE = '/mrwconsulting/codepipeline/npm/scope';
ShintoConstants.SSM_KEY_NPM_TOKEN = '/mrwconsulting/codepipeline/npm/token';
ShintoConstants.SSM_KEY_NPM_REGISTRY = '/mrwconsulting/codepipeline/npm/registry';
ShintoConstants.CONFIG_VPCID = 'vpc-02190165902943bca';
ShintoConstants.CONFIG_IMAGE_REPOSITORY = 'continuous-integration';
ShintoConstants.CONFIG_IMAGE_TAG = '1.0.0';
ShintoConstants.CONFIG_COMPUTE_TYPE = aws_codebuild_1.ComputeType.SMALL;
ShintoConstants.CONFIG_SUBNET_TYPE = aws_ec2_1.SubnetType.PRIVATE_WITH_EGRESS;
ShintoConstants.CONFIG_CROSS_ACCOUNT_KEYS = ShintoConstants.TRUE;
ShintoConstants.CONFIG_SELF_MUTATION = ShintoConstants.TRUE;
ShintoConstants.CONFIG_SERVICE_PRINCIPAL = [
    'codepipeline.amazonaws.com',
    'cloudformation.amazonaws.com',
];
ShintoConstants.CONFIG_MANAGED_POLICY = [
    'AWSCodeBuildAdminAccess',
    'AmazonVPCReadOnlyAccess',
    'AmazonSSMReadOnlyAccess',
];
ShintoConstants.PIPELINE_NOTIFICATION_EVENTS = [
    'codepipeline-pipeline-pipeline-execution-failed',
    'codepipeline-pipeline-pipeline-execution-canceled',
    'codepipeline-pipeline-pipeline-execution-started',
    'codepipeline-pipeline-pipeline-execution-resumed',
    'codepipeline-pipeline-pipeline-execution-succeeded',
    'codepipeline-pipeline-pipeline-execution-superseded',
];
ShintoConstants.STAGE_NOTIFICATION_EVENTS = [
    'codepipeline-pipeline-stage-execution-started',
    'codepipeline-pipeline-stage-execution-succeeded',
    'codepipeline-pipeline-stage-execution-resumed',
    'codepipeline-pipeline-stage-execution-canceled',
    'codepipeline-pipeline-stage-execution-failed',
];
ShintoConstants.KEY_CLOUDGUARD_ID = 'mrwconsulting/codepipeline/cloudguard/id';
ShintoConstants.KEY_CLOUDGUARD_SECRET = 'mrwconsulting/codepipeline/cloudguard/secret';
ShintoConstants.CLOUDGUARD_CODESCAN_RULESET = '-2003';
ShintoConstants.CLOUDGUARD_ASSESSMENT_RULESET = '657548';
ShintoConstants.CLOUDGUARD_ENVIRONMENT_ID = '33720a85-e06b-4afd-9eba-970ad92bb23d';
ShintoConstants.SHIFTLEFT_COMMANDS = ['shiftleft.sh'];
ShintoConstants.SHIFTLEFT_INSTALL_COMMANDS = [];
ShintoConstants.SHIFTLEFT_EXCLUDED_PATTERN = '.pipeline/**';
ShintoConstants.JAVA_BUILD_COMMANDS = ['java-build.sh'];
ShintoConstants.JAVA_BUILD_INSTALL_COMMANDS = [];
ShintoConstants.JAVA_PUBLISH_COMMANDS = ['java-publish.sh'];
ShintoConstants.JAVA_PUBLISH_INSTALL_COMMANDS = [];
ShintoConstants.PYTHON_PYTEST_DIR = 'tests';
ShintoConstants.PYTHON_BUILD_COMMANDS = ['python-build.sh'];
ShintoConstants.PYTHON_BUILD_INSTALL_COMMANDS = [];
ShintoConstants.PYTHON_PUBLISH_COMMANDS = ['python-publish.sh'];
ShintoConstants.PYTHON_PUBLISH_INSTALL_COMMANDS = [];
ShintoConstants.SYNTH_COMMANDS = [
    'synth-commands.sh',
];
ShintoConstants.SYNTH_INSTALL_COMMANDS = [
    'synth-install.sh',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NoaW50by9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw2REFBd0Q7QUFDeEQsaURBQWlEO0FBQ2pELG1DQUFnRDtBQUVoRDs7Ozs7R0FLRztBQUNILE1BQWEsZUFBZTs7QUFBNUIsMENBNkVDOzs7QUE1RWlCLG9CQUFJLEdBQUcsSUFBSSxDQUFDO0FBQ1oscUJBQUssR0FBRyxLQUFLLENBQUM7QUFDZCxpQ0FBaUIsR0FBRyxNQUFNLENBQUM7QUFDM0IsMkJBQVcsR0FBQyw0QkFBNEIsQ0FBQztBQUV6QywyQkFBVyxHQUFHLElBQUksQ0FBQztBQUNuQixrQ0FBa0IsR0FBRyxpQkFBUyxDQUFDLElBQUksQ0FBQztBQUNwQywyQ0FBMkIsR0FBRyxXQUFXLENBQUM7QUFDMUMsOEJBQWMsR0FBRyxrQkFBVSxDQUFDLFNBQVMsQ0FBQztBQUN0Qyx5Q0FBeUIsR0FBRyxlQUFlLENBQUMsaUJBQWlCLENBQUM7QUFFOUQsNkJBQWEsR0FBRyxvQ0FBb0MsQ0FBQztBQUNyRCxpQ0FBaUIsR0FBRyx1Q0FBdUMsQ0FBQztBQUM1RCxpQ0FBaUIsR0FBRyx1Q0FBdUMsQ0FBQztBQUM1RCxvQ0FBb0IsR0FBRywwQ0FBMEMsQ0FBQztBQUVsRSw0QkFBWSxHQUFFLHVCQUF1QixDQUFDO0FBQ3RDLHVDQUF1QixHQUFHLHdCQUF3QixDQUFDO0FBQ25ELGdDQUFnQixHQUFHLE9BQU8sQ0FBQztBQUMzQixtQ0FBbUIsR0FBRywyQkFBVyxDQUFDLEtBQUssQ0FBQztBQUN4QyxrQ0FBa0IsR0FBRyxvQkFBVSxDQUFDLG1CQUFtQixDQUFDO0FBQ3BELHlDQUF5QixHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUM7QUFDakQsb0NBQW9CLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQztBQUM1Qyx3Q0FBd0IsR0FBRztJQUN6Qyw0QkFBNEI7SUFDNUIsOEJBQThCO0NBQy9CLENBQUM7QUFDYyxxQ0FBcUIsR0FBRztJQUN0Qyx5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLHlCQUF5QjtDQUMxQixDQUFDO0FBQ2MsNENBQTRCLEdBQUc7SUFDN0MsaURBQWlEO0lBQ2pELG1EQUFtRDtJQUNuRCxrREFBa0Q7SUFDbEQsa0RBQWtEO0lBQ2xELG9EQUFvRDtJQUNwRCxxREFBcUQ7Q0FDdEQsQ0FBQztBQUNjLHlDQUF5QixHQUFHO0lBQzFDLCtDQUErQztJQUMvQyxpREFBaUQ7SUFDakQsK0NBQStDO0lBQy9DLGdEQUFnRDtJQUNoRCw4Q0FBOEM7Q0FDL0MsQ0FBQztBQUVjLGlDQUFpQixHQUFHLDBDQUEwQyxDQUFDO0FBQy9ELHFDQUFxQixHQUFHLDhDQUE4QyxDQUFDO0FBRXZFLDJDQUEyQixHQUFHLE9BQU8sQ0FBQztBQUN0Qyw2Q0FBNkIsR0FBRyxRQUFRLENBQUM7QUFDekMseUNBQXlCLEdBQUcsc0NBQXNDLENBQUM7QUFFbkUsa0NBQWtCLEdBQWEsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNoRCwwQ0FBMEIsR0FBYSxFQUFFLENBQUM7QUFDMUMsMENBQTBCLEdBQUcsY0FBYyxDQUFDO0FBRTVDLG1DQUFtQixHQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDbEQsMkNBQTJCLEdBQWEsRUFBRSxDQUFDO0FBQzNDLHFDQUFxQixHQUFhLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUN0RCw2Q0FBNkIsR0FBYSxFQUFFLENBQUM7QUFFN0MsaUNBQWlCLEdBQVcsT0FBTyxDQUFDO0FBQ3BDLHFDQUFxQixHQUFhLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUN0RCw2Q0FBNkIsR0FBYSxFQUFFLENBQUM7QUFDN0MsdUNBQXVCLEdBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQzFELCtDQUErQixHQUFhLEVBQUUsQ0FBQztBQUUvQyw4QkFBYyxHQUFHO0lBQy9CLG1CQUFtQjtDQUNwQixDQUFDO0FBQ2Msc0NBQXNCLEdBQUc7SUFDdkMsa0JBQWtCO0NBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wdXRlVHlwZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1jb2RlYnVpbGQnO1xuaW1wb3J0IHsgU3VibmV0VHlwZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1lYzInO1xuaW1wb3J0IHsgQnVpbGRUeXBlLCBSZWdpb25UeXBlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICpcbiAqIEBzdGF0aWNcbiAqIEBkZXNjcmlwdGlvbiAtIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24gY29uc3RhbnRzXG4gKlxuICovXG5leHBvcnQgY2xhc3MgU2hpbnRvQ29uc3RhbnRzIHtcbiAgc3RhdGljIHJlYWRvbmx5IFRSVUUgPSB0cnVlO1xuICBzdGF0aWMgcmVhZG9ubHkgRkFMU0UgPSBmYWxzZTtcbiAgc3RhdGljIHJlYWRvbmx5IFJFUE9TSVRPUllfQlJBTkNIID0gJ21haW4nO1xuICBzdGF0aWMgcmVhZG9ubHkgU0VDUkVUX05BTUU9J21yd2NvbnN1bHRpbmcvY29kZXBpcGVsaW5lJztcblxuICBzdGF0aWMgcmVhZG9ubHkgREVGQVVMVF9ESVIgPSAnLi8nO1xuICBzdGF0aWMgcmVhZG9ubHkgREVGQVVMVF9CVUlMRF9UWVBFID0gQnVpbGRUeXBlLkpBVkE7XG4gIHN0YXRpYyByZWFkb25seSBERUZBVUxUX1BMVUdHQUJMRV9XT1JLU1BBQ0UgPSAnLnBpcGVsaW5lJztcbiAgc3RhdGljIHJlYWRvbmx5IERFRkFVTFRfUkVHSU9OID0gUmVnaW9uVHlwZS5VU19FQVNUXzE7XG4gIHN0YXRpYyByZWFkb25seSBERUZBVUxUX1JFUE9TSVRPUllfQlJBTkNIID0gU2hpbnRvQ29uc3RhbnRzLlJFUE9TSVRPUllfQlJBTkNIO1xuXG4gIHN0YXRpYyByZWFkb25seSBTU01fS0VZX1ZQQ0lEID0gJy9tcndjb25zdWx0aW5nL2NvZGVwaXBlbGluZS92cGMvaWQnO1xuICBzdGF0aWMgcmVhZG9ubHkgU1NNX0tFWV9OUE1fU0NPUEUgPSAnL21yd2NvbnN1bHRpbmcvY29kZXBpcGVsaW5lL25wbS9zY29wZSc7XG4gIHN0YXRpYyByZWFkb25seSBTU01fS0VZX05QTV9UT0tFTiA9ICcvbXJ3Y29uc3VsdGluZy9jb2RlcGlwZWxpbmUvbnBtL3Rva2VuJztcbiAgc3RhdGljIHJlYWRvbmx5IFNTTV9LRVlfTlBNX1JFR0lTVFJZID0gJy9tcndjb25zdWx0aW5nL2NvZGVwaXBlbGluZS9ucG0vcmVnaXN0cnknO1xuXG4gIHN0YXRpYyByZWFkb25seSBDT05GSUdfVlBDSUQ9ICd2cGMtMDIxOTAxNjU5MDI5NDNiY2EnO1xuICBzdGF0aWMgcmVhZG9ubHkgQ09ORklHX0lNQUdFX1JFUE9TSVRPUlkgPSAnY29udGludW91cy1pbnRlZ3JhdGlvbic7XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUdfSU1BR0VfVEFHID0gJzEuMC4wJztcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJR19DT01QVVRFX1RZUEUgPSBDb21wdXRlVHlwZS5TTUFMTDtcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJR19TVUJORVRfVFlQRSA9IFN1Ym5ldFR5cGUuUFJJVkFURV9XSVRIX0VHUkVTUztcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJR19DUk9TU19BQ0NPVU5UX0tFWVMgPSBTaGludG9Db25zdGFudHMuVFJVRTtcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJR19TRUxGX01VVEFUSU9OID0gU2hpbnRvQ29uc3RhbnRzLlRSVUU7XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUdfU0VSVklDRV9QUklOQ0lQQUwgPSBbXG4gICAgJ2NvZGVwaXBlbGluZS5hbWF6b25hd3MuY29tJyxcbiAgICAnY2xvdWRmb3JtYXRpb24uYW1hem9uYXdzLmNvbScsXG4gIF07XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUdfTUFOQUdFRF9QT0xJQ1kgPSBbXG4gICAgJ0FXU0NvZGVCdWlsZEFkbWluQWNjZXNzJyxcbiAgICAnQW1hem9uVlBDUmVhZE9ubHlBY2Nlc3MnLFxuICAgICdBbWF6b25TU01SZWFkT25seUFjY2VzcycsXG4gIF07XG4gIHN0YXRpYyByZWFkb25seSBQSVBFTElORV9OT1RJRklDQVRJT05fRVZFTlRTID0gW1xuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtcGlwZWxpbmUtZXhlY3V0aW9uLWZhaWxlZCcsXG4gICAgJ2NvZGVwaXBlbGluZS1waXBlbGluZS1waXBlbGluZS1leGVjdXRpb24tY2FuY2VsZWQnLFxuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtcGlwZWxpbmUtZXhlY3V0aW9uLXN0YXJ0ZWQnLFxuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtcGlwZWxpbmUtZXhlY3V0aW9uLXJlc3VtZWQnLFxuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtcGlwZWxpbmUtZXhlY3V0aW9uLXN1Y2NlZWRlZCcsXG4gICAgJ2NvZGVwaXBlbGluZS1waXBlbGluZS1waXBlbGluZS1leGVjdXRpb24tc3VwZXJzZWRlZCcsXG4gIF07XG4gIHN0YXRpYyByZWFkb25seSBTVEFHRV9OT1RJRklDQVRJT05fRVZFTlRTID0gW1xuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtc3RhZ2UtZXhlY3V0aW9uLXN0YXJ0ZWQnLFxuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtc3RhZ2UtZXhlY3V0aW9uLXN1Y2NlZWRlZCcsXG4gICAgJ2NvZGVwaXBlbGluZS1waXBlbGluZS1zdGFnZS1leGVjdXRpb24tcmVzdW1lZCcsXG4gICAgJ2NvZGVwaXBlbGluZS1waXBlbGluZS1zdGFnZS1leGVjdXRpb24tY2FuY2VsZWQnLFxuICAgICdjb2RlcGlwZWxpbmUtcGlwZWxpbmUtc3RhZ2UtZXhlY3V0aW9uLWZhaWxlZCcsXG4gIF07XG5cbiAgc3RhdGljIHJlYWRvbmx5IEtFWV9DTE9VREdVQVJEX0lEID0gJ21yd2NvbnN1bHRpbmcvY29kZXBpcGVsaW5lL2Nsb3VkZ3VhcmQvaWQnO1xuICBzdGF0aWMgcmVhZG9ubHkgS0VZX0NMT1VER1VBUkRfU0VDUkVUID0gJ21yd2NvbnN1bHRpbmcvY29kZXBpcGVsaW5lL2Nsb3VkZ3VhcmQvc2VjcmV0JztcblxuICBzdGF0aWMgcmVhZG9ubHkgQ0xPVURHVUFSRF9DT0RFU0NBTl9SVUxFU0VUID0gJy0yMDAzJztcbiAgc3RhdGljIHJlYWRvbmx5IENMT1VER1VBUkRfQVNTRVNTTUVOVF9SVUxFU0VUID0gJzY1NzU0OCc7XG4gIHN0YXRpYyByZWFkb25seSBDTE9VREdVQVJEX0VOVklST05NRU5UX0lEID0gJzMzNzIwYTg1LWUwNmItNGFmZC05ZWJhLTk3MGFkOTJiYjIzZCc7XG5cbiAgc3RhdGljIHJlYWRvbmx5IFNISUZUTEVGVF9DT01NQU5EUzogc3RyaW5nW10gPSBbJ3NoaWZ0bGVmdC5zaCddO1xuICBzdGF0aWMgcmVhZG9ubHkgU0hJRlRMRUZUX0lOU1RBTExfQ09NTUFORFM6IHN0cmluZ1tdID0gW107XG4gIHN0YXRpYyByZWFkb25seSBTSElGVExFRlRfRVhDTFVERURfUEFUVEVSTiA9ICcucGlwZWxpbmUvKionO1xuXG4gIHN0YXRpYyByZWFkb25seSBKQVZBX0JVSUxEX0NPTU1BTkRTOiBzdHJpbmdbXSA9IFsnamF2YS1idWlsZC5zaCddO1xuICBzdGF0aWMgcmVhZG9ubHkgSkFWQV9CVUlMRF9JTlNUQUxMX0NPTU1BTkRTOiBzdHJpbmdbXSA9IFtdO1xuICBzdGF0aWMgcmVhZG9ubHkgSkFWQV9QVUJMSVNIX0NPTU1BTkRTOiBzdHJpbmdbXSA9IFsnamF2YS1wdWJsaXNoLnNoJ107XG4gIHN0YXRpYyByZWFkb25seSBKQVZBX1BVQkxJU0hfSU5TVEFMTF9DT01NQU5EUzogc3RyaW5nW10gPSBbXTtcblxuICBzdGF0aWMgcmVhZG9ubHkgUFlUSE9OX1BZVEVTVF9ESVI6IHN0cmluZyA9ICd0ZXN0cyc7XG4gIHN0YXRpYyByZWFkb25seSBQWVRIT05fQlVJTERfQ09NTUFORFM6IHN0cmluZ1tdID0gWydweXRob24tYnVpbGQuc2gnXTtcbiAgc3RhdGljIHJlYWRvbmx5IFBZVEhPTl9CVUlMRF9JTlNUQUxMX0NPTU1BTkRTOiBzdHJpbmdbXSA9IFtdO1xuICBzdGF0aWMgcmVhZG9ubHkgUFlUSE9OX1BVQkxJU0hfQ09NTUFORFM6IHN0cmluZ1tdID0gWydweXRob24tcHVibGlzaC5zaCddO1xuICBzdGF0aWMgcmVhZG9ubHkgUFlUSE9OX1BVQkxJU0hfSU5TVEFMTF9DT01NQU5EUzogc3RyaW5nW10gPSBbXTtcblxuICBzdGF0aWMgcmVhZG9ubHkgU1lOVEhfQ09NTUFORFMgPSBbXG4gICAgJ3N5bnRoLWNvbW1hbmRzLnNoJyxcbiAgXTtcbiAgc3RhdGljIHJlYWRvbmx5IFNZTlRIX0lOU1RBTExfQ09NTUFORFMgPSBbXG4gICAgJ3N5bnRoLWluc3RhbGwuc2gnLFxuICBdO1xufSJdfQ==